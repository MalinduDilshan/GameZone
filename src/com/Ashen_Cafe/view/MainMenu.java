/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Ashen_Cafe.view;
 
import com.Ashen_Cafe.Reports.GenerateReport;
import com.Ashen_Cafe.view.memberView.AddMember;
import com.Ashen_Cafe.Support.GetCurrentTime;
import com.Ashen_Cafe.Support.GetProgressValueFormLoad;
import com.Ashen_Cafe.Support.GetRowCount;
import com.Ashen_Cafe.database.DataBaseTerminal;
import com.Ashen_Cafe.Support.GetTimeLeft;
import com.Ashen_Cafe.Support.ProgressBarThread;
import com.Ashen_Cafe.Support.ProgressRenderer;
import com.Ashen_Cafe.Support.TimeUnitThread;
import com.Ashen_Cafe.database.DataBaseComputer;
import com.Ashen_Cafe.database.DataBaseMember;
import com.Ashen_Cafe.database.DataBaseProgressBar;
import com.Ashen_Cafe.database.DataBaseSystemUsers;
import com.Ashen_Cafe.entity.Computer;
import com.Ashen_Cafe.entity.Member;
import com.Ashen_Cafe.entity.ProgressBar;
import com.Ashen_Cafe.entity.Systemusers;
import com.Ashen_Cafe.entity.Terminal;
import com.Ashen_Cafe.view.memberView.DeleteMember;
import com.Ashen_Cafe.view.memberView.UpdateMember;
import com.Ashen_Cafe.view.systemUserView.AddUser;
import com.Ashen_Cafe.view.systemUserView.AssignCost;
import com.Ashen_Cafe.view.systemUserView.DeleteUser;
import com.Ashen_Cafe.view.systemUserView.UpdateUser;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author MaLindu DiLshan
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpanel_home = new javax.swing.JTabbedPane();
        panel_home = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_terminals = new javax.swing.JTable();
        btn_addtime = new javax.swing.JButton();
        btn_shutdown = new javax.swing.JButton();
        btn_addpc = new javax.swing.JButton();
        btn_editpc = new javax.swing.JButton();
        lbl_pcs_options = new javax.swing.JLabel();
        lbl_create_terminals = new javax.swing.JLabel();
        btn_deletepc = new javax.swing.JButton();
        lbl_heading = new javax.swing.JLabel();
        btn_checkstatus = new javax.swing.JButton();
        lbl_backgroundHome = new javax.swing.JLabel();
        panel_members = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_members = new javax.swing.JTable();
        btn_createmember = new javax.swing.JButton();
        btn_updatemember = new javax.swing.JButton();
        btn_deletemember = new javax.swing.JButton();
        lbl_memberoption = new javax.swing.JLabel();
        ibi_heading = new javax.swing.JLabel();
        lbl_backgroundMembers = new javax.swing.JLabel();
        panel_computers = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_computers = new javax.swing.JTable();
        lbl_headingComputers = new javax.swing.JLabel();
        lbl_backgroundComputers = new javax.swing.JLabel();
        panel_reports = new javax.swing.JPanel();
        lbl_headingReport = new javax.swing.JLabel();
        btn_dailyreport = new javax.swing.JButton();
        btn_monthlyreport = new javax.swing.JButton();
        btn_memberusage = new javax.swing.JButton();
        btn_pcsusage = new javax.swing.JButton();
        lbl_backgroundreport = new javax.swing.JLabel();
        panel_systemusers = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_sysusers = new javax.swing.JTable();
        lbl_headingSystemusers = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btn_createuser = new javax.swing.JButton();
        btn_updateuser = new javax.swing.JButton();
        btn_deleteuser = new javax.swing.JButton();
        lbl_assigncost = new javax.swing.JLabel();
        btn_perhour = new javax.swing.JButton();
        lbl_backgroundsystemusers = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Menu");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tpanel_home.setToolTipText("Home screen");

        panel_home.setLayout(null);

        tbl_terminals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ID", "PC Name", "Progress Bar", "Time Left"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_terminals.setCellSelectionEnabled(false);
        tbl_terminals.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbl_terminals);
        if (tbl_terminals.getColumnModel().getColumnCount() > 0) {
            tbl_terminals.getColumnModel().getColumn(0).setResizable(false);
            tbl_terminals.getColumnModel().getColumn(1).setResizable(false);
            tbl_terminals.getColumnModel().getColumn(2).setResizable(false);
            tbl_terminals.getColumnModel().getColumn(3).setResizable(false);
        }

        panel_home.add(jScrollPane1);
        jScrollPane1.setBounds(50, 50, 610, 440);

        btn_addtime.setText("Add Time");
        btn_addtime.setToolTipText("click here to add time for computers");
        btn_addtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addtimeActionPerformed(evt);
            }
        });
        panel_home.add(btn_addtime);
        btn_addtime.setBounds(690, 80, 110, 23);

        btn_shutdown.setText("ShutDown");
        btn_shutdown.setToolTipText("click here to shutdown and restart computers");
        btn_shutdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_shutdownActionPerformed(evt);
            }
        });
        panel_home.add(btn_shutdown);
        btn_shutdown.setBounds(690, 130, 110, 23);

        btn_addpc.setText("Add PCs");
        btn_addpc.setToolTipText("click here to add new computer profile");
        btn_addpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addpcActionPerformed(evt);
            }
        });
        panel_home.add(btn_addpc);
        btn_addpc.setBounds(690, 330, 110, 23);

        btn_editpc.setText("Edit PC");
        btn_editpc.setToolTipText("click here to edit computer profile");
        btn_editpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editpcActionPerformed(evt);
            }
        });
        panel_home.add(btn_editpc);
        btn_editpc.setBounds(690, 380, 110, 23);

        lbl_pcs_options.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 18)); // NOI18N
        lbl_pcs_options.setForeground(new java.awt.Color(255, 255, 255));
        lbl_pcs_options.setText("PCs Options");
        panel_home.add(lbl_pcs_options);
        lbl_pcs_options.setBounds(670, 230, 130, 50);

        lbl_create_terminals.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 18)); // NOI18N
        lbl_create_terminals.setForeground(new java.awt.Color(255, 255, 255));
        lbl_create_terminals.setText("Create Terminal");
        panel_home.add(lbl_create_terminals);
        lbl_create_terminals.setBounds(670, 20, 130, 60);

        btn_deletepc.setText("Delete PC");
        btn_deletepc.setToolTipText("click here to delete computer profile");
        btn_deletepc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deletepcActionPerformed(evt);
            }
        });
        panel_home.add(btn_deletepc);
        btn_deletepc.setBounds(690, 430, 110, 23);

        lbl_heading.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 36)); // NOI18N
        lbl_heading.setForeground(new java.awt.Color(255, 255, 255));
        lbl_heading.setText("Terminals...");
        panel_home.add(lbl_heading);
        lbl_heading.setBounds(30, 10, 200, 40);

        btn_checkstatus.setText("Check Status");
        btn_checkstatus.setToolTipText("click here to check all computers");
        btn_checkstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_checkstatusActionPerformed(evt);
            }
        });
        panel_home.add(btn_checkstatus);
        btn_checkstatus.setBounds(690, 280, 110, 23);

        lbl_backgroundHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Ashen_Cafe/view/BackgroundGameZoneMenu.jpg"))); // NOI18N
        lbl_backgroundHome.setText("Background");
        panel_home.add(lbl_backgroundHome);
        lbl_backgroundHome.setBounds(0, 0, 820, 580);

        tpanel_home.addTab("Home", panel_home);

        panel_members.setLayout(null);

        tbl_members.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Member ID", "First Name", "Last Name", "NIC", "Mobile No", "E-Mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_members);
        if (tbl_members.getColumnModel().getColumnCount() > 0) {
            tbl_members.getColumnModel().getColumn(0).setResizable(false);
            tbl_members.getColumnModel().getColumn(1).setResizable(false);
            tbl_members.getColumnModel().getColumn(2).setResizable(false);
            tbl_members.getColumnModel().getColumn(3).setResizable(false);
            tbl_members.getColumnModel().getColumn(4).setResizable(false);
            tbl_members.getColumnModel().getColumn(5).setResizable(false);
        }

        panel_members.add(jScrollPane2);
        jScrollPane2.setBounds(50, 50, 610, 440);

        btn_createmember.setText("Create ");
        btn_createmember.setToolTipText("click here to create member profile");
        btn_createmember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_creatememberActionPerformed(evt);
            }
        });
        panel_members.add(btn_createmember);
        btn_createmember.setBounds(690, 80, 110, 23);

        btn_updatemember.setText("Update");
        btn_updatemember.setToolTipText("click here to update member profile");
        btn_updatemember.setMaximumSize(new java.awt.Dimension(69, 23));
        btn_updatemember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updatememberActionPerformed(evt);
            }
        });
        panel_members.add(btn_updatemember);
        btn_updatemember.setBounds(690, 130, 110, 23);

        btn_deletemember.setText("Delete");
        btn_deletemember.setToolTipText("click here to delete member profile");
        btn_deletemember.setMaximumSize(new java.awt.Dimension(69, 23));
        btn_deletemember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deletememberActionPerformed(evt);
            }
        });
        panel_members.add(btn_deletemember);
        btn_deletemember.setBounds(690, 180, 110, 23);

        lbl_memberoption.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 18)); // NOI18N
        lbl_memberoption.setForeground(new java.awt.Color(255, 255, 255));
        lbl_memberoption.setText("Create Members");
        panel_members.add(lbl_memberoption);
        lbl_memberoption.setBounds(670, 30, 130, 40);

        ibi_heading.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 36)); // NOI18N
        ibi_heading.setForeground(new java.awt.Color(255, 255, 255));
        ibi_heading.setText("Members...");
        panel_members.add(ibi_heading);
        ibi_heading.setBounds(30, 10, 170, 40);

        lbl_backgroundMembers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Ashen_Cafe/view/BackgroundGameZoneMenu.jpg"))); // NOI18N
        lbl_backgroundMembers.setText("Background");
        panel_members.add(lbl_backgroundMembers);
        lbl_backgroundMembers.setBounds(0, 0, 820, 580);

        tpanel_home.addTab("Members", panel_members);

        panel_computers.setLayout(null);

        tbl_computers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "PC ID", "PC Name", "IP Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbl_computers);
        if (tbl_computers.getColumnModel().getColumnCount() > 0) {
            tbl_computers.getColumnModel().getColumn(0).setResizable(false);
            tbl_computers.getColumnModel().getColumn(1).setResizable(false);
            tbl_computers.getColumnModel().getColumn(2).setResizable(false);
        }

        panel_computers.add(jScrollPane4);
        jScrollPane4.setBounds(50, 50, 610, 440);

        lbl_headingComputers.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 36)); // NOI18N
        lbl_headingComputers.setForeground(new java.awt.Color(255, 255, 255));
        lbl_headingComputers.setText("Computers...");
        panel_computers.add(lbl_headingComputers);
        lbl_headingComputers.setBounds(30, 10, 180, 40);

        lbl_backgroundComputers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Ashen_Cafe/view/BackgroundGameZoneMenu.jpg"))); // NOI18N
        lbl_backgroundComputers.setText("Background");
        panel_computers.add(lbl_backgroundComputers);
        lbl_backgroundComputers.setBounds(0, 0, 820, 580);

        tpanel_home.addTab("Computers", panel_computers);

        panel_reports.setLayout(null);

        lbl_headingReport.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 36)); // NOI18N
        lbl_headingReport.setForeground(new java.awt.Color(255, 255, 255));
        lbl_headingReport.setText("Reports...");
        panel_reports.add(lbl_headingReport);
        lbl_headingReport.setBounds(40, 10, 150, 40);

        btn_dailyreport.setText("Daily Report");
        btn_dailyreport.setToolTipText("click here to generate daily report");
        btn_dailyreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dailyreportActionPerformed(evt);
            }
        });
        panel_reports.add(btn_dailyreport);
        btn_dailyreport.setBounds(60, 90, 230, 30);

        btn_monthlyreport.setText("Monthly Report");
        btn_monthlyreport.setToolTipText("click here to generate monthly report");
        btn_monthlyreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_monthlyreportActionPerformed(evt);
            }
        });
        panel_reports.add(btn_monthlyreport);
        btn_monthlyreport.setBounds(60, 150, 230, 30);

        btn_memberusage.setText("Member Usage");
        btn_memberusage.setToolTipText("click here to generate member usage report");
        btn_memberusage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_memberusageActionPerformed(evt);
            }
        });
        panel_reports.add(btn_memberusage);
        btn_memberusage.setBounds(60, 210, 230, 30);

        btn_pcsusage.setText("PCs Usage");
        btn_pcsusage.setToolTipText("click here to generate computer usage report");
        btn_pcsusage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pcsusageActionPerformed(evt);
            }
        });
        panel_reports.add(btn_pcsusage);
        btn_pcsusage.setBounds(60, 270, 230, 30);

        lbl_backgroundreport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Ashen_Cafe/view/BackgroundGameZoneMenu.jpg"))); // NOI18N
        lbl_backgroundreport.setText("Background");
        panel_reports.add(lbl_backgroundreport);
        lbl_backgroundreport.setBounds(0, 0, 820, 580);

        tpanel_home.addTab("Reports", panel_reports);

        panel_systemusers.setLayout(null);

        tbl_sysusers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "NIC", "First Name", "Last Name", "Mobile", "Designation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbl_sysusers);
        if (tbl_sysusers.getColumnModel().getColumnCount() > 0) {
            tbl_sysusers.getColumnModel().getColumn(0).setResizable(false);
            tbl_sysusers.getColumnModel().getColumn(1).setResizable(false);
            tbl_sysusers.getColumnModel().getColumn(2).setResizable(false);
            tbl_sysusers.getColumnModel().getColumn(3).setResizable(false);
            tbl_sysusers.getColumnModel().getColumn(4).setResizable(false);
            tbl_sysusers.getColumnModel().getColumn(5).setResizable(false);
        }

        panel_systemusers.add(jScrollPane3);
        jScrollPane3.setBounds(50, 50, 610, 440);

        lbl_headingSystemusers.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 36)); // NOI18N
        lbl_headingSystemusers.setForeground(new java.awt.Color(255, 255, 255));
        lbl_headingSystemusers.setText("System Users...");
        panel_systemusers.add(lbl_headingSystemusers);
        lbl_headingSystemusers.setBounds(40, 10, 220, 40);

        jLabel1.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Create Users");
        panel_systemusers.add(jLabel1);
        jLabel1.setBounds(670, 20, 120, 60);

        btn_createuser.setText("Create User");
        btn_createuser.setToolTipText("click here to create system user profile");
        btn_createuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createuserActionPerformed(evt);
            }
        });
        panel_systemusers.add(btn_createuser);
        btn_createuser.setBounds(690, 80, 110, 23);

        btn_updateuser.setText("Update User");
        btn_updateuser.setToolTipText("click here to update system user profile");
        btn_updateuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateuserActionPerformed(evt);
            }
        });
        panel_systemusers.add(btn_updateuser);
        btn_updateuser.setBounds(690, 130, 110, 23);

        btn_deleteuser.setText("Delete User");
        btn_deleteuser.setToolTipText("click here to delete system user profile");
        btn_deleteuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteuserActionPerformed(evt);
            }
        });
        panel_systemusers.add(btn_deleteuser);
        btn_deleteuser.setBounds(690, 180, 110, 23);

        lbl_assigncost.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 18)); // NOI18N
        lbl_assigncost.setForeground(new java.awt.Color(255, 255, 255));
        lbl_assigncost.setText("Assign Cost");
        panel_systemusers.add(lbl_assigncost);
        lbl_assigncost.setBounds(670, 230, 120, 40);

        btn_perhour.setText("Per Hour");
        btn_perhour.setToolTipText("click here to change cost per hour, ");
        btn_perhour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_perhourActionPerformed(evt);
            }
        });
        panel_systemusers.add(btn_perhour);
        btn_perhour.setBounds(690, 280, 110, 23);

        lbl_backgroundsystemusers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Ashen_Cafe/view/BackgroundGameZoneMenu.jpg"))); // NOI18N
        lbl_backgroundsystemusers.setText("Background");
        panel_systemusers.add(lbl_backgroundsystemusers);
        lbl_backgroundsystemusers.setBounds(0, 0, 820, 580);

        tpanel_home.addTab("System Users", panel_systemusers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpanel_home, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpanel_home, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setTableFormLoad();
        //this.setTable();
        this.setMemberTable();
        this.setComputerTable();
        this.setSystemUsersTable();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.saveData();  
    }//GEN-LAST:event_formWindowClosing

    private void btn_creatememberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_creatememberActionPerformed
        AddMember addm=new  AddMember();
        addm.setVisible(true);
        addm.setMenuRef(this);
    }//GEN-LAST:event_btn_creatememberActionPerformed

    private void btn_checkstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_checkstatusActionPerformed
        CheckStatus cs=new CheckStatus();
        cs.setVisible(true);
    }//GEN-LAST:event_btn_checkstatusActionPerformed

    private void btn_deletepcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deletepcActionPerformed
        DeletePC del=new DeletePC();
        del.setVisible(true);
        del.setMenu(this);
    }//GEN-LAST:event_btn_deletepcActionPerformed

    private void btn_editpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editpcActionPerformed
        EditPC ed = new EditPC();
        ed.setVisible(true);
        ed.setMenu(this);
    }//GEN-LAST:event_btn_editpcActionPerformed

    private void btn_addpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addpcActionPerformed
        AddPC addp =new AddPC();
        addp.setVisible(true);
        addp.setMenu(this);
    }//GEN-LAST:event_btn_addpcActionPerformed

    private void btn_shutdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_shutdownActionPerformed
        Shutdown sd = new Shutdown();
        sd.setVisible(true);
        sd.setMenu(this);
    }//GEN-LAST:event_btn_shutdownActionPerformed

    private void btn_addtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addtimeActionPerformed
        AddTime addt = new AddTime();
        addt.setVisible(true);
        addt.setMenu(this);
    }//GEN-LAST:event_btn_addtimeActionPerformed

    private void btn_updatememberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updatememberActionPerformed
        UpdateMember editm=new UpdateMember();
        editm.setVisible(true);
        editm.setMenuRef(this);
    }//GEN-LAST:event_btn_updatememberActionPerformed

    private void btn_deletememberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deletememberActionPerformed
        DeleteMember delm=new DeleteMember();
        delm.setVisible(true);
        delm.setMenuRef(this);
    }//GEN-LAST:event_btn_deletememberActionPerformed

    private void btn_createuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createuserActionPerformed
        AddUser addu=new AddUser();
        addu.setVisible(true);
        addu.setMenuRef(this);
    }//GEN-LAST:event_btn_createuserActionPerformed

    private void btn_deleteuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteuserActionPerformed
        DeleteUser delu=new DeleteUser();
        delu.setVisible(true);
        delu.setMenuRef(this);
    }//GEN-LAST:event_btn_deleteuserActionPerformed

    private void btn_updateuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateuserActionPerformed
        UpdateUser upu=new UpdateUser();
        upu.setVisible(true);
        upu.setMenuRef(this);
    }//GEN-LAST:event_btn_updateuserActionPerformed

    private void btn_dailyreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dailyreportActionPerformed
        new Thread(new Runnable() {
            public void run() {
                GenerateReport generateReport=new GenerateReport();
                generateReport.dayEndReport();
            }
        }).start();
    }//GEN-LAST:event_btn_dailyreportActionPerformed

    private void btn_perhourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_perhourActionPerformed
        AssignCost ac=new AssignCost();
        ac.setVisible(true);
    }//GEN-LAST:event_btn_perhourActionPerformed

    private void btn_monthlyreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_monthlyreportActionPerformed
        MonthlyReport mreport=new MonthlyReport();
        mreport.setVisible(true);
    }//GEN-LAST:event_btn_monthlyreportActionPerformed

    private void btn_pcsusageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pcsusageActionPerformed
        PCsPaymentReport pcpayrt=new PCsPaymentReport();
        pcpayrt.setVisible(true);
    }//GEN-LAST:event_btn_pcsusageActionPerformed

    private void btn_memberusageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_memberusageActionPerformed
        MemberUsageReport murt=new MemberUsageReport();
        murt.setVisible(true);
    }//GEN-LAST:event_btn_memberusageActionPerformed
    
    public void setAccessFalse(){ 
        tpanel_home.removeAll();
        tpanel_home.addTab("Home", panel_home);
        
        btn_addpc.setVisible(false);
        btn_editpc.setVisible(false);
        btn_deletepc.setVisible(false);
        System.out.println("You are not the Admin...");
    }
    
    public void setMemberTable(){
        
        DataBaseMember dbm=new DataBaseMember();

        Member dox=new Member();

        dox=dbm.searchAll();
        int rows=dox.getId();
        
        String[] headers = { "Member ID", "First Name", "Last Name", "NIC", "Mobile No", "E-Mail" };
        modeldox = new DefaultTableModel(headers, rows);
        tbl_members.setModel(modeldox);
        tbl_members.setPreferredScrollableViewportSize(tbl_members.getPreferredSize());

        for(int i=0;i<rows;i++){  //rows beging with 0 in JTable so incress value by 1;
        
        dox=dbm.search(i+1);
        if(dox.getId()==0)
            continue;
        modeldox.setValueAt(dox.getId(), i, 0);
        modeldox.setValueAt(dox.getFname(), i, 1);
        modeldox.setValueAt(dox.getLname(), i, 2);
        modeldox.setValueAt(dox.getNic(), i, 3);
        modeldox.setValueAt(dox.getMobile(), i, 4);
        modeldox.setValueAt(dox.getEmail(), i, 5);

        }
    }
    
    public void setComputerTable(){
        
        DataBaseComputer dbc=new DataBaseComputer();

        Computer pc=new Computer();
        
        GetRowCount grc=new GetRowCount();
        int rows=grc.getRowCount("computers");
        
        String[] headers = { "PC ID", "PC Name", "IP Address" };
        modelpc = new DefaultTableModel(headers, rows);
        tbl_computers.setModel(modelpc);
        tbl_computers.setPreferredScrollableViewportSize(tbl_computers.getPreferredSize());
        
       
        for(int i=0;i<rows;i++){  //rows beging with 0 in JTable so incress value by 1;

        pc=dbc.search(i+1);
        
        modelpc.setValueAt(pc.getId(), i, 0);
        modelpc.setValueAt(pc.getPcName(), i, 1);
        modelpc.setValueAt(pc.getIpAddress(), i, 2);

        }
    }
    
    public void setSystemUsersTable(){
        
        DataBaseSystemUsers dbsys=new DataBaseSystemUsers();

        Systemusers sys=new Systemusers();
        
        sys=dbsys.searchAll();
        int rows=sys.getId();
        
        String[] headers = { "User ID", "NIC", "First Name", "Last Name", "Mobile","Designation" };
        modelsys = new DefaultTableModel(headers, rows);
        tbl_sysusers.setModel(modelsys);
        tbl_sysusers.setPreferredScrollableViewportSize(tbl_sysusers.getPreferredSize());
       
        for(int i=0;i<rows;i++){  //rows beging with 0 in JTable so incress value by 1;
        
        sys=dbsys.search(i+1);
        if(sys.getId()==0)
            continue;
        modelsys.setValueAt(sys.getId(), i, 0);
        modelsys.setValueAt(sys.getNic(), i, 1);
        modelsys.setValueAt(sys.getFname(), i, 2);
        modelsys.setValueAt(sys.getLname(), i, 3);
        modelsys.setValueAt(sys.getMobile(), i, 4);
        modelsys.setValueAt(sys.getType(), i, 5);

        }        
    }
    
    
    
    
    
//save data in progressbar table
    public void saveData(){
        
        DataBaseProgressBar dbp=new DataBaseProgressBar();
        
        
        ProgressBar pbar=new ProgressBar();
        GetCurrentTime gct=new GetCurrentTime(); 

        int rowCount = model.getRowCount();
        
        for(int i=0;i<rowCount;i++)
        {
            pbar.setId((int)model.getValueAt(i,0));
            pbar.setPvalue((int) model.getValueAt(i,2));
            pbar.setTimeclosed(gct.getTime());
            
           /* System.out.println("ID is :"+pbar.getId());
            System.out.println("PValue is :"+pbar.getPvalue());
            System.out.println("Time is :"+pbar.getTimeclosed());*/
            dbp.update(pbar,i+1);
        }
        
   }
    
    
    
    
    
 //set Table
    public void setTable(){
        
        progressBarArray=new LinkedList();
        threadArray=new LinkedList();
        timeUnitThreadArray=new LinkedList();
        timeArray=new LinkedList();
        
        DataBaseTerminal dbt=new DataBaseTerminal();

        Terminal te=new Terminal();
        
        GetRowCount grc=new GetRowCount();
        int rows=grc.getRowCount("terminals");
        
        String[] headers = { "ID", "PC Name", "Progress Bar", "Time Left" };
        model = new DefaultTableModel(headers, rows);
        tbl_terminals.setModel(model);
       
        for(int i=0;i<rows;i++){  //rows beging with 0 in JTable so incress value by 1;
        
        te=dbt.search(i+1);
        id=te.getId();
        pc=te.getPcname();
        
     /* System.out.println("Terminal Object :"+i+" ID is "+te.getId());
        System.out.println("Time is  :"+te.getDuration());
        System.out.println("Assign time is  :"+te.getSystime());
        System.out.println("Assign date is  :"+te.getSysdate());
        System.out.println("PC name is  :"+te.getPcname());*/
        
        GetTimeLeft gtl=new GetTimeLeft();
        time=gtl.getTime(te.getId());
        
        ProgressRenderer p=new ProgressRenderer(0, 100);    //For progress Bars
        p.setMainMenu(this);
        pb=new ProgressBarThread();
        //System.out.println("ID is "+id);
        pb.setProgressBar(model,id,pc,time,i);
        t=new Thread(pb);
        t.start();
        
        tu=new TimeUnitThread(); //  For Time Left column
        tu.setTimeUnit(model, id, time,i);
        t2=new Thread(tu);
        t2.start(); 

        progressBarArray.add(pb);
        threadArray.add(t);
        
        timeUnitThreadArray.add(tu);
        timeArray.add(t2);
        
        tbl_terminals.getColumn("Progress Bar").setCellRenderer(p); //For single Colomn
        tbl_terminals.setPreferredScrollableViewportSize(tbl_terminals.getPreferredSize());
        } 
    }
 
    
//set Table Form Load    
    public void setTableFormLoad(){
        
        progressBarArray=new LinkedList();
        threadArray=new LinkedList();
        timeUnitThreadArray=new LinkedList();
        timeArray=new LinkedList();
        
        DataBaseTerminal dbt=new DataBaseTerminal();
        DataBaseProgressBar dbp=new DataBaseProgressBar();
        
        ProgressBar pbar=new ProgressBar();
        Terminal te=new Terminal();
        
        GetRowCount grc=new GetRowCount();
        int rows=grc.getRowCount("terminals");
        
        String[] headers = { "ID", "PC Name", "Progress Bar", "Time Left" };
        model = new DefaultTableModel(headers, rows);
        tbl_terminals.setModel(model);
       
        for(int i=0;i<rows;i++){  //rows beging with 0 in JTable so incress value by 1;
        
        te=dbt.search(i+1);
        id=te.getId();
        pc=te.getPcname();
        pbar=dbp.search(i+1);   
        
     /* System.out.println("Terminal Object :"+i+" ID is "+te.getId());
        System.out.println("Time is  :"+te.getDuration());
        System.out.println("Assign time is  :"+te.getSystime());
        System.out.println("Assign date is  :"+te.getSysdate());
        System.out.println("PC name is  :"+te.getPcname());*/

        GetTimeLeft gtl=new GetTimeLeft();
        time=gtl.getTime(te.getId());
        
        if(time==0 && pbar.getPvalue()==0){    //shutdown pc
        ProgressRenderer p=new ProgressRenderer(0, 100);
        p.setMainMenu(this);
        pb=new ProgressBarThread(); //For progress Bars
        //System.out.println("ID is "+id);
        System.out.println("time is zero minute and PC is shutdown..");
        pb.setProgressBarFormLoad(model,id,pc,time,0,i);
        t=new Thread(pb);
        t.start();

        tu=new TimeUnitThread(); //  For Time Left column
        tu.setTimeUnit(model,id, time,i);
        t2=new Thread(tu);
        t2.start(); 

        tbl_terminals.getColumn("Progress Bar").setCellRenderer(p); //For single Colomn 
        
        }
        
        else if(time==0 && pbar.getPvalue()<=100){   //already finished terminal
        ProgressRenderer p=new ProgressRenderer(0, 100);
        p.setMainMenu(this);
        pb=new ProgressBarThread(); //For progress Bars
        //System.out.println("ID is "+id);
        System.out.println("time is zero minute and progressBar 100%..");
        pb.setProgressBarFormLoad(model,id,pc,0,100,i);
        t=new Thread(pb);
        t.start();
        
        tu=new TimeUnitThread(); //  For Time Left column
        tu.setTimeUnit(model,id, time,i);
        t2=new Thread(tu);
        t2.start(); 
        
        tbl_terminals.getColumn("Progress Bar").setCellRenderer(p); //For single Colomn 
        
        }       
                 
        else {  //Terminal is still processing..
        GetProgressValueFormLoad gpv=new GetProgressValueFormLoad();
        pvalue=gpv.findIndex(pbar.getTimeclosed(),Integer.parseInt(te.getDuration()));
        //System.out.println("getPvalue......"+pbar.getPvalue());
                
        pvalue=pvalue+pbar.getPvalue();     
        
        ProgressRenderer p=new ProgressRenderer(0, 100);
        p.setMainMenu(this);
        pb=new ProgressBarThread(); //For progress Bars
        //System.out.println("ID is "+id);
        System.out.println("time is..."+te.getDuration()+"\t"+"Pvalue is..."+pvalue+"\t"+"Terminal still running...");
        speedTime=Integer.parseInt(te.getDuration());   //To get very first time speed
        pb.setProgressBarFormLoad(model,id,pc,speedTime*60,pvalue,i);   //Terminal should run as its first stage speed 
        t=new Thread(pb);
        t.start();

        tu=new TimeUnitThread();
        tu.setTimeUnit(model, id, time,i);
        t2=new Thread(tu);
        t2.start();  
        
        tbl_terminals.getColumn("Progress Bar").setCellRenderer(p); //For single Colomn        
        }
        
        progressBarArray.add(pb);
        threadArray.add(t);
        
        timeUnitThreadArray.add(tu);
        timeArray.add(t2);
        
        tbl_terminals.setPreferredScrollableViewportSize(tbl_terminals.getPreferredSize());
        }
       /* //for check 
        pb=(ProgressBarThread)progressBarArray.get(0);
        System.out.println("ProgressBarThread class property Thread ID :"+pb.getThreadID());
        
        //for check 
        t=(Thread)threadArray.get(0);
        System.out.println("ProgressBarThread class Thread ID :"+t.getId());*/
    }
    
    
//set Table from Shutdown    
    public void setTableShutdown(int threadID){
            //for progress Bar Thread
        //System.out.println("Passing id id from Shutdown :"+threadID);
        
        pb=(ProgressBarThread)progressBarArray.get(threadID-1);
        t=(Thread)threadArray.get(threadID-1);
        
        //System.out.println("ProgressBarThread class Thread ID :"+pb.getThreadID());
        
        if(pb.getThreadID()==threadID && t.isAlive()){
                t.stop();
                System.out.println("setTableShutdown ProgreassBar isAlive..."+t.isAlive()); 
        }
        else
           System.out.println("Error setTableShutdown ProgreassBar isAlive..."+t.isAlive());
        
        
           //For Time Unit Thread
        tu=(TimeUnitThread)timeUnitThreadArray.get(threadID-1);
        t2=(Thread)timeArray.get(threadID-1);
        
        //System.out.println("timeUnitThreadArray class Thread ID :"+tu.getThreadID());
        
        if(tu.getThreadID()==threadID && t2.isAlive()){
                t2.stop();
                System.out.println("setTableShutdown TimeUnit isAlive..."+t2.isAlive()); 
        }
        else
           System.out.println("Error setTableShutdown TimeUnit isAlive..."+t2.isAlive());
            
    }
    
    
    
    public void repaintMenuShutdown(int threadID){
        
        model.setValueAt(0, threadID-1, 2);
        model.setValueAt("00:00:00", threadID-1, 3);
        
    }
    
    
//set Table from AddTime
    public void setTableAddTime(int threadID){
            //For Progress Bar Thread
        //System.out.println("Passing id from AddTime :"+threadID);
        
        pb=(ProgressBarThread)progressBarArray.get(threadID-1);
        t=(Thread)threadArray.get(threadID-1);
        
        //System.out.println("ProgressBarThread class Thread ID :"+pb.getThreadID());
        
        if(pb.getThreadID()==threadID && t.isAlive()){
            t.stop();
            System.out.println("setTableAddTime ProgreassBar isAlive..."+t.isAlive()); 
        }
        else
        System.out.println("Error setTableAddTime ProgreassBar isAlive..."+t.isAlive());

        tu=(TimeUnitThread)timeUnitThreadArray.get(threadID-1);
        t2=(Thread)timeArray.get(threadID-1);
        
        //System.out.println("timeUnitThreadArray class Thread ID :"+tu.getThreadID());
        
        if(tu.getThreadID()==threadID && t2.isAlive()){
            t2.stop();
            System.out.println("setTableAddTime TimeUnit isAlive..."+t2.isAlive()); 
        }
        else
        System.out.println("Error setTableAddTime TimeUnit isAlive..."+t2.isAlive());
        
    }
    
    
    
    public void repaintMenuAddTime(int threadID){
        
        DataBaseTerminal dbt=new DataBaseTerminal();

        Terminal te=new Terminal();

        te=dbt.search(threadID);
        id=te.getId();
        pc=te.getPcname();
        
     /* System.out.println("Terminal Object :"+i+" ID is "+te.getId());
        System.out.println("Time is  :"+te.getDuration());
        System.out.println("Assign time is  :"+te.getSystime());
        System.out.println("Assign date is  :"+te.getSysdate());
        System.out.println("PC name is  :"+te.getPcname());*/
        
        GetTimeLeft gtl=new GetTimeLeft();
        time=gtl.getTime(te.getId());
        
        int row=threadID-1;
        System.out.println("Row should be..."+pb.getRow());
        
        ProgressRenderer p=new ProgressRenderer(0, 100);
        p.setMainMenu(this);
        pb=new ProgressBarThread();
        //System.out.println("ID is "+id);
        pb.setProgressBar(model,id,pc,time,row);
        t=new Thread(pb);
        t.start();
        
        tu=new TimeUnitThread();
        tu.setTimeUnit(model, id, time,row);
        t2=new Thread(tu);
        t2.start(); 
        
        progressBarArray.add(row, pb);
        threadArray.add(row,t);
        
        timeUnitThreadArray.add(row, tu);
        timeArray.add(row, t2);
        
        tbl_terminals.getColumn("Progress Bar").setCellRenderer(p); //For single Colomn
        tbl_terminals.setPreferredScrollableViewportSize(tbl_terminals.getPreferredSize());   
    }
    
    public void exit(){
        this.dispose();
    }
   
    /**
     * @param args the command line arguments
     */
    private int id;
    private int time,speedTime;
    private int pvalue=0;
    private String pc;
    private DefaultTableModel model,modeldox,modelpc,modelsys;
    private ProgressBarThread pb;
    private TimeUnitThread tu;
    private Thread t,t2;
    private LinkedList threadArray,progressBarArray,timeArray,timeUnitThreadArray;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addpc;
    private javax.swing.JButton btn_addtime;
    private javax.swing.JButton btn_checkstatus;
    private javax.swing.JButton btn_createmember;
    private javax.swing.JButton btn_createuser;
    private javax.swing.JButton btn_dailyreport;
    private javax.swing.JButton btn_deletemember;
    private javax.swing.JButton btn_deletepc;
    private javax.swing.JButton btn_deleteuser;
    private javax.swing.JButton btn_editpc;
    private javax.swing.JButton btn_memberusage;
    private javax.swing.JButton btn_monthlyreport;
    private javax.swing.JButton btn_pcsusage;
    private javax.swing.JButton btn_perhour;
    private javax.swing.JButton btn_shutdown;
    private javax.swing.JButton btn_updatemember;
    private javax.swing.JButton btn_updateuser;
    private javax.swing.JLabel ibi_heading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbl_assigncost;
    private javax.swing.JLabel lbl_backgroundComputers;
    private javax.swing.JLabel lbl_backgroundHome;
    private javax.swing.JLabel lbl_backgroundMembers;
    private javax.swing.JLabel lbl_backgroundreport;
    private javax.swing.JLabel lbl_backgroundsystemusers;
    private javax.swing.JLabel lbl_create_terminals;
    private javax.swing.JLabel lbl_heading;
    private javax.swing.JLabel lbl_headingComputers;
    private javax.swing.JLabel lbl_headingReport;
    private javax.swing.JLabel lbl_headingSystemusers;
    private javax.swing.JLabel lbl_memberoption;
    private javax.swing.JLabel lbl_pcs_options;
    private javax.swing.JPanel panel_computers;
    private javax.swing.JPanel panel_home;
    private javax.swing.JPanel panel_members;
    private javax.swing.JPanel panel_reports;
    private javax.swing.JPanel panel_systemusers;
    private javax.swing.JTable tbl_computers;
    private javax.swing.JTable tbl_members;
    private javax.swing.JTable tbl_sysusers;
    private static javax.swing.JTable tbl_terminals;
    private javax.swing.JTabbedPane tpanel_home;
    // End of variables declaration//GEN-END:variables
}
