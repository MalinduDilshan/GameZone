/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Ashen_Cafe.view;


import com.Ashen_Cafe.Server.Server;
import com.Ashen_Cafe.Support.GetHoursAndMin;
import com.Ashen_Cafe.database.DataBaseComputer;
import com.Ashen_Cafe.database.DataBaseConnection;
import com.Ashen_Cafe.database.DataBaseTerminal;
import com.Ashen_Cafe.entity.Computer;
import com.Ashen_Cafe.Support.GetTimeLeft;
import com.Ashen_Cafe.Support.Message;
import com.Ashen_Cafe.Support.SendTimeForServer;
import com.Ashen_Cafe.entity.Terminal;
import com.Ashen_Cafe.Support.Validation;
import com.Ashen_Cafe.database.DataBaseComputerUsage;
import com.Ashen_Cafe.database.DataBaseMember;
import com.Ashen_Cafe.database.DataBaseMembershipTime;
import com.Ashen_Cafe.entity.ComputerUsage;
import com.Ashen_Cafe.entity.Member;
import com.Ashen_Cafe.entity.MembershipTime;
import java.awt.Image;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;


/**
 *
 * @author MaLindu DiLshan
 */
public class AddTime extends javax.swing.JFrame {

    /**
     *
     */
    public AddTime() {
        initComponents();
    }
    public void setMenu(MainMenu menu){
        this.menu=menu;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_heading = new javax.swing.JLabel();
        jcb_id = new javax.swing.JComboBox();
        lbl_id = new javax.swing.JLabel();
        lbl_pcname = new javax.swing.JLabel();
        txt_pcname = new javax.swing.JTextField();
        lbl_addtime = new javax.swing.JLabel();
        btn_60 = new javax.swing.JButton();
        btn_30 = new javax.swing.JButton();
        btn_10 = new javax.swing.JButton();
        btn__5 = new javax.swing.JButton();
        jsp1 = new javax.swing.JSeparator();
        lbl_timeleft = new javax.swing.JLabel();
        jsp2 = new javax.swing.JSeparator();
        btn_ok = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        txt_timeleft = new javax.swing.JTextField();
        lbl_min2 = new javax.swing.JLabel();
        txt_min = new javax.swing.JTextField();
        jcb_memberType = new javax.swing.JComboBox();
        lbl_type = new javax.swing.JLabel();
        jsp3 = new javax.swing.JSeparator();
        lbl_memberid = new javax.swing.JLabel();
        txt_memberid = new javax.swing.JTextField();
        lbl_profile = new javax.swing.JLabel();
        lbl_fname = new javax.swing.JLabel();
        txt_fname = new javax.swing.JTextField();
        lbl_lname = new javax.swing.JLabel();
        txt_lname = new javax.swing.JTextField();
        lbl_nic = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        lbl_mobile = new javax.swing.JLabel();
        txt_mobile = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        lbl_email = new javax.swing.JLabel();
        txt_sec = new javax.swing.JTextField();
        txt_hr = new javax.swing.JTextField();
        lbl_hr = new javax.swing.JLabel();
        lbl_min = new javax.swing.JLabel();
        lbl_sec = new javax.swing.JLabel();
        lbl_background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Time");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(153, 153, 153));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lbl_heading.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 36)); // NOI18N
        lbl_heading.setForeground(new java.awt.Color(255, 255, 255));
        lbl_heading.setText("Add Time...");

        jcb_id.setModel(new javax.swing.DefaultComboBoxModel());
        jcb_id.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_idItemStateChanged(evt);
            }
        });

        lbl_id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_id.setForeground(new java.awt.Color(255, 255, 255));
        lbl_id.setText("PC ID              :");

        lbl_pcname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_pcname.setForeground(new java.awt.Color(255, 255, 255));
        lbl_pcname.setText("PC Name        :");

        txt_pcname.setEditable(false);

        lbl_addtime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_addtime.setForeground(new java.awt.Color(255, 255, 255));
        lbl_addtime.setText("Add Time       :");

        btn_60.setText("+ 60 min");
        btn_60.setToolTipText("click to assign 60 min");
        btn_60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_60ActionPerformed(evt);
            }
        });

        btn_30.setText("+ 30 min");
        btn_30.setToolTipText("click to assign 30 min");
        btn_30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_30ActionPerformed(evt);
            }
        });

        btn_10.setText("+ 10 min");
        btn_10.setToolTipText("click to assign 10 min");
        btn_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_10ActionPerformed(evt);
            }
        });

        btn__5.setText("+ 5 min");
        btn__5.setToolTipText("click to assign 5 min");
        btn__5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn__5ActionPerformed(evt);
            }
        });

        lbl_timeleft.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_timeleft.setForeground(new java.awt.Color(255, 255, 255));
        lbl_timeleft.setText("Time Left       :");

        btn_ok.setText("OK");
        btn_ok.setToolTipText("assign time for computer");
        btn_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_okActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.setToolTipText("clear all fields");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        txt_timeleft.setEditable(false);

        lbl_min2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_min2.setForeground(new java.awt.Color(255, 255, 255));
        lbl_min2.setText("minutes");

        txt_min.setEditable(false);
        txt_min.setAutoscrolls(false);

        jcb_memberType.setModel(new javax.swing.DefaultComboBoxModel());
        jcb_memberType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_memberTypeItemStateChanged(evt);
            }
        });

        lbl_type.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_type.setForeground(new java.awt.Color(255, 255, 255));
        lbl_type.setText("Member Type :");

        jsp3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lbl_memberid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_memberid.setForeground(new java.awt.Color(255, 255, 255));
        lbl_memberid.setText("Member ID   :");

        txt_memberid.setEditable(false);

        lbl_profile.setBackground(new java.awt.Color(255, 255, 255));
        lbl_profile.setForeground(new java.awt.Color(255, 255, 255));
        lbl_profile.setText("Profile photo");

        lbl_fname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_fname.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fname.setText("First Name    :");

        txt_fname.setEditable(false);

        lbl_lname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_lname.setForeground(new java.awt.Color(255, 255, 255));
        lbl_lname.setText("Last Name    :");

        txt_lname.setEditable(false);

        lbl_nic.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_nic.setForeground(new java.awt.Color(255, 255, 255));
        lbl_nic.setText("NIC               :");

        txt_nic.setEditable(false);

        lbl_mobile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_mobile.setForeground(new java.awt.Color(255, 255, 255));
        lbl_mobile.setText("Mobile           :");

        txt_mobile.setEditable(false);

        txt_email.setEditable(false);

        lbl_email.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_email.setForeground(new java.awt.Color(255, 255, 255));
        lbl_email.setText("E-mail           :");

        txt_sec.setEditable(false);

        txt_hr.setEditable(false);

        lbl_hr.setBackground(new java.awt.Color(255, 255, 255));
        lbl_hr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_hr.setForeground(new java.awt.Color(255, 255, 255));
        lbl_hr.setText("Hr");

        lbl_min.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_min.setForeground(new java.awt.Color(255, 255, 255));
        lbl_min.setText("Min");

        lbl_sec.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_sec.setForeground(new java.awt.Color(255, 255, 255));
        lbl_sec.setText("Sec");

        lbl_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Ashen_Cafe/view/BackgroundGameZone.jpg"))); // NOI18N
        lbl_background.setText("Background");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbl_heading, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jcb_id, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbl_type, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jcb_memberType, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbl_pcname, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txt_pcname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbl_addtime, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txt_hr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(lbl_hr, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txt_min, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(lbl_min, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txt_sec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(lbl_sec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jsp1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbl_timeleft, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txt_timeleft, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(lbl_min2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btn_60, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(btn_30, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btn_10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(btn__5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jsp2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btn_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jsp3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_memberid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txt_memberid, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(lbl_profile, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txt_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_email, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbl_id, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(lbl_background, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lbl_heading, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jcb_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_type, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_memberType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_pcname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_pcname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_addtime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_hr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_hr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_min, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_min, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_sec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_sec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jsp1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_timeleft, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_timeleft, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_min2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_60, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn__5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jsp2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jsp3, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_memberid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_memberid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_profile, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(lbl_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(lbl_background, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lbl_pcname.getAccessibleContext().setAccessibleName("PC Name                 :");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_okActionPerformed

        DataBaseTerminal db=new DataBaseTerminal();
        DataBaseComputerUsage dbu=new DataBaseComputerUsage();
        
        Terminal te=new Terminal();
        Computer pc=new Computer();
        ComputerUsage cu=new ComputerUsage();
        
        Message msg=new Message();
        Validation vd=new Validation();
        
        SendTimeForServer stfs=new SendTimeForServer();
        Server s=new Server();
        
        try {
            status = s.sentDatatoClient(ip,"online");
        } 
        catch (IOException ex) {
                if(ex.getMessage().equals("No route to host: Datagram send failed")){
                    status="Server_offline";
                    }
                    else{
                    msg.serevrMsg("Error in AddTime method"+"\n"+ex.toString(),this);
                    }
        }
        catch (Exception ex) {
             msg.serevrMsg(ex.getMessage(),this);
        }

        te.setDuration(Integer.toString(duration));
        
        if(String.valueOf(jcb_memberType.getSelectedItem()).equals("Select Type"))
            msg.warningMsg("Member Type or ID should be selected", this);
        else if(String.valueOf(jcb_id.getSelectedItem()).equals("Select ID"))
            msg.warningMsg("Computer ID should be selected", this);
        else if(status.equals("offline"))
            msg.warningMsg("This PC is in offline mode", this);
        else if(status.equals("Server_offline"))
            msg.serevrMsg("Sever is offline. Please check your connection", this);
        else if(duration==0)
            msg.warningMsg("Time should not be empty", this);
        else if(duration==1)
            msg.warningMsg("Time should be more than 02 minutes", this);
        else if(duration<Integer.parseInt(te.getDuration()))
            msg.warningMsg("Time should not be less than PC's remaining time", this);
        else{ 
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        
        Date dNow = new Date( );
        SimpleDateFormat ft = new SimpleDateFormat ("yyyy.MM.dd");
        //System.out.println("Current Date: " + ft.format(dNow));
        
        if(timeLeft==0){
        amtPerMin=pay/60;   //pay should give by selecte membership form
        amt=Math.round(amtPerMin*duration);
        }
        else{
        amtPerMin=pay/60;   //pay should give by selecte membership form
        amt=Math.round(amtPerMin*duration-timeLeft);   
        }
        
        /*System.out.println("Cost per Hour..."+pay);
        System.out.println("Amt per min is..."+amtPerMin);
        System.out.println("Amount in rounded value..."+amt);*/
        
        te.setId(Integer.parseInt(String.valueOf(jcb_id.getSelectedItem())));
        te.setPcname(txt_pcname.getText());
        te.setSystime(String.valueOf(sdf.format(cal.getTime())));
        te.setSysdate(ft.format(dNow));
        
        cu.setId(id);
        if(mid.equals("Guest"))
        cu.setMemberid(Integer.toString(1));
        else
        cu.setMemberid(mid);    
        cu.setPcname(txt_pcname.getText());
        cu.setStartedtime(String.valueOf(sdf.format(cal.getTime())));
        cu.setUsage(Integer.toString(duration));
        cu.setDate(ft.format(dNow));
        cu.setPayment(Double.toString(amt));
        
        
        int dialogResult = msg.confirmMsg("Do you want to create a new Terminal ", this);
            if( dialogResult ==  0 ){
	try{
            db.update(te,te.getId());
            
            dbu.insert(cu);
            System.out.println("assigin time :"+duration);
            
            if(timeLeft==0)
	    msg.pcMsg(duration,te.getPcname(),amt, this);
            else
            msg.pcMsgForRunningTerminal(duration-timeLeft,te.getPcname(),amt, this);
            
            stfs.setAddTimeRef(this);
            stfs.setData(ip,duration);
            
            clearAll();
            
            menu.setTableAddTime(id);
            menu.saveData();
            menu.repaintMenuAddTime(id);            
            
            this.dispose();
                }
        catch(Exception ex){
	    msg.warningMsg("Error in AddTime Form"+"\n"+ex.toString(), this);
		}	
            }
        }   
    }//GEN-LAST:event_btn_okActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
                Message msg=new Message();
        
        int dialogResult = msg.confirmMsg("Do you want to clear all the fields? ", this);
				if(dialogResult ==  0){
					clearAll();
				}
    }//GEN-LAST:event_btn_clearActionPerformed

    private void jcb_idItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_idItemStateChanged
        Computer pc=new Computer();
        Terminal te=new Terminal();
        
        DataBaseComputer db=new DataBaseComputer();
        DataBaseTerminal dbt=new DataBaseTerminal();
        
        if(jcb_id.getSelectedItem().equals("Select ID"))
        {
            System.out.println("**********************select id for PC**********************");
            txt_pcname.setText("");
            txt_timeleft.setText("");
            txt_min.setText("");
            duration=0;
            this.setTime(duration);
        }
        else{
            id=Integer.parseInt(String.valueOf(jcb_id.getSelectedItem()));
            
            pc=db.search(id);
            txt_pcname.setText(pc.getPcName());
            ip=pc.getIpAddress();
         
            te=dbt.search(id);
            
            GetTimeLeft tl=new GetTimeLeft();
            getTimeLeft=tl.getTime(id)/60;
            
            duration=getTimeLeft;   //Assign time for add time
            timeLeft=getTimeLeft;   //Assign time for calculate bill for already running PC
            
            //System.out.println(duration);
            
    if(timeLeft!=0){    //to set member id for already assign PC
            //System.out.println("This is already assign PC...");
              try{
   DataBaseConnection dbcon=new DataBaseConnection();
   con=dbcon.connection();
   Statement st=con.createStatement();
				
    ResultSet rs = st.executeQuery("select*from computerusage where usedate='"+te.getSysdate()+"'");
        while(rs.next()){											
            if(rs.getString(5).equals(te.getSystime())){
                if(rs.getString(3).equals("1"))
                    jcb_memberType.setSelectedItem("Guest");
                else{
                    jcb_memberType.setSelectedItem(Integer.parseInt(rs.getString(3)));
                }
                }
            }	
        con.close();
        }
    catch(SQLException e){
		System.out.println("SQL Error in AddTime Form auto select member id..."+"\n"+e.getMessage());
            }
        }
        else{
            jcb_memberType.setSelectedItem("Select Type");
        }
            
            txt_timeleft.setText(String.valueOf(duration));
            this.setTime(duration);
            }
    }//GEN-LAST:event_jcb_idItemStateChanged

    private void btn_60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_60ActionPerformed
        Message msg=new Message();
        if(String.valueOf(jcb_id.getSelectedItem()).equals("Select ID"))
            msg.warningMsg("Computer ID should be selected", this);
        else{
        duration=duration+60;
        this.setTime(duration);
        }
    }//GEN-LAST:event_btn_60ActionPerformed

    private void btn_30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_30ActionPerformed
        Message msg=new Message();
        if(String.valueOf(jcb_id.getSelectedItem()).equals("Select ID"))
            msg.warningMsg("Computer ID should be selected", this);
        else{
        duration=duration+30;
        this.setTime(duration);
        }
    }//GEN-LAST:event_btn_30ActionPerformed

    private void btn_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_10ActionPerformed
        Message msg=new Message();
        if(String.valueOf(jcb_id.getSelectedItem()).equals("Select ID"))
            msg.warningMsg("Computer ID should be selected", this);       
        else{
        duration=duration+10;
        this.setTime(duration);
        }
    }//GEN-LAST:event_btn_10ActionPerformed

    private void btn__5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn__5ActionPerformed
        Message msg=new Message();
        if(String.valueOf(jcb_id.getSelectedItem()).equals("Select ID"))
            msg.warningMsg("Computer ID should be selected", this);       
        else{
        duration=duration+5;
        this.setTime(duration);
        }
    }//GEN-LAST:event_btn__5ActionPerformed

    public void setTime(int timeToSet){
            GetHoursAndMin ghm=new GetHoursAndMin();
            hms=ghm.getTime(timeToSet);
            
            txt_hr.setText(hms.substring(0,2));
            txt_min.setText(hms.substring(3,5));
            txt_sec.setText(hms.substring(6,8));
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
try{
   DataBaseConnection dbcon=new DataBaseConnection();
   con=dbcon.connection();
   Statement st=con.createStatement();
				
ResultSet rs = st.executeQuery("select id from terminals");				
jcb_id.addItem("Select ID");
while(rs.next()){											
jcb_id.addItem(rs.getInt(1));			
}	
con.close();
}
catch(SQLException e){
		System.out.println("SQL Error in AddTime Form"+"\n"+e.getMessage());
            }


try{
   DataBaseConnection dbcon=new DataBaseConnection();
   con=dbcon.connection();
   Statement st=con.createStatement();
				
ResultSet rs = st.executeQuery("select memberid from members");				
jcb_memberType.addItem("Select Type");
jcb_memberType.addItem("Guest");
while(rs.next()){
    if(rs.getInt(1)==1)
        continue;
    else
jcb_memberType.addItem(rs.getInt(1));			
}	
con.close();
}
catch(SQLException e){
		System.out.println("SQL Error in AddTime Form"+"\n"+e.getMessage());
            }
    }//GEN-LAST:event_formWindowOpened

    private void jcb_memberTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_memberTypeItemStateChanged
        mid=String.valueOf(jcb_memberType.getSelectedItem());
        
        Validation vd=new Validation();
        MembershipTime mt=new MembershipTime();
         
        DataBaseMembershipTime dbmt=new DataBaseMembershipTime();
        
        if(mid.equals("Select Type")){
        txt_memberid.setText("");
        txt_fname.setText("");
        txt_lname.setText("");
        txt_nic.setText("");
        txt_mobile.setText("");
        txt_email.setText("");
        }
        else if(!vd.isNumeric(mid)&&mid.equals("Guest")){
        mt=dbmt.search(mid);
        pay=mt.getCharge();
        
        txt_memberid.setText("1");
        txt_fname.setText("Guest");
        txt_lname.setText("Guest");
        txt_nic.setText("Guest");
        txt_mobile.setText("Guest");
        txt_email.setText("Guest");
        }
        else{
        mt=dbmt.search("Member");       //member should me in the database column called membertype
        pay=mt.getCharge();
        
        DataBaseMember dbm=new DataBaseMember();
        Member dox=new Member();
        dox=dbm.search(Integer.parseInt(mid));
        
        txt_memberid.setText(mid);
        txt_fname.setText(dox.getFname());
        txt_lname.setText(dox.getLname());
        txt_nic.setText(dox.getNic());
        txt_mobile.setText(dox.getMobile());
        txt_email.setText(dox.getEmail()); 
        

        if(!dox.getPhotopath().isEmpty()){
                    ImageIcon icon = new ImageIcon(dox.getPhotopath());
        lbl_profile.setIcon(icon); 
        }
        }  
    }//GEN-LAST:event_jcb_memberTypeItemStateChanged
public void clearAll(){
        jcb_memberType.setSelectedItem("Select Type");
        jcb_id.setSelectedItem("Select ID");
        txt_pcname.setText("");
        txt_timeleft.setText("");
        txt_hr.setText("");
        txt_min.setText("");
        txt_sec.setText("");
        txt_memberid.setText("");
        txt_fname.setText("");
        txt_lname.setText("");
        txt_nic.setText("");
        txt_mobile.setText("");
        txt_email.setText("");
        duration=0;   
    }
    /**
     * @param args the command line arguments
     */
    private Connection con;
    private int duration,timeLeft,getTimeLeft;
    private MainMenu menu;
    private int id;
    private String ip,status="online",mid,hms;
    private double amt,amtPerMin,pay;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_10;
    private javax.swing.JButton btn_30;
    private javax.swing.JButton btn_60;
    private javax.swing.JButton btn__5;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_ok;
    private javax.swing.JComboBox jcb_id;
    private javax.swing.JComboBox jcb_memberType;
    private javax.swing.JSeparator jsp1;
    private javax.swing.JSeparator jsp2;
    private javax.swing.JSeparator jsp3;
    private javax.swing.JLabel lbl_addtime;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_fname;
    private javax.swing.JLabel lbl_heading;
    private javax.swing.JLabel lbl_hr;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_lname;
    private javax.swing.JLabel lbl_memberid;
    private javax.swing.JLabel lbl_min;
    private javax.swing.JLabel lbl_min2;
    private javax.swing.JLabel lbl_mobile;
    private javax.swing.JLabel lbl_nic;
    private javax.swing.JLabel lbl_pcname;
    private javax.swing.JLabel lbl_profile;
    private javax.swing.JLabel lbl_sec;
    private javax.swing.JLabel lbl_timeleft;
    private javax.swing.JLabel lbl_type;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_hr;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_memberid;
    private javax.swing.JTextField txt_min;
    private javax.swing.JTextField txt_mobile;
    private javax.swing.JTextField txt_nic;
    private javax.swing.JTextField txt_pcname;
    private javax.swing.JTextField txt_sec;
    private javax.swing.JTextField txt_timeleft;
    // End of variables declaration//GEN-END:variables
}
