/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Ashen_Cafe.view.systemUserView;

import com.Ashen_Cafe.Support.Message;
import com.Ashen_Cafe.database.DataBaseConnection;
import com.Ashen_Cafe.database.DataBaseSystemUsers;
import com.Ashen_Cafe.entity.Systemusers;
import com.Ashen_Cafe.view.AddTime;
import com.Ashen_Cafe.view.MainMenu;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
/**
 *
 * @author MaLindu DiLshan
 */
public class DeleteUser extends javax.swing.JFrame {

    /*
     * 
     */
    public DeleteUser() {
        initComponents();
    }
    public void setMenuRef(MainMenu menu) {
        this.menu=menu;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_heading = new javax.swing.JLabel();
        lbl_userid = new javax.swing.JLabel();
        lbl_fname = new javax.swing.JLabel();
        lbl_lname = new javax.swing.JLabel();
        txt_fname = new javax.swing.JTextField();
        btn_delete = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        txt_lname = new javax.swing.JTextField();
        lbl_nic = new javax.swing.JLabel();
        lbl_mobile = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        txt_mobile = new javax.swing.JTextField();
        jcb_userid = new javax.swing.JComboBox();
        lbl_backgroundupdatemember = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Delete System User");
        setAlwaysOnTop(true);
        setPreferredSize(new java.awt.Dimension(410, 530));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        lbl_heading.setFont(new java.awt.Font("Adobe Caslon Pro", 2, 36)); // NOI18N
        lbl_heading.setForeground(new java.awt.Color(255, 255, 255));
        lbl_heading.setText("Remove System User...");
        getContentPane().add(lbl_heading);
        lbl_heading.setBounds(50, 10, 330, 40);

        lbl_userid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_userid.setForeground(new java.awt.Color(255, 255, 255));
        lbl_userid.setText("User ID                 :");
        getContentPane().add(lbl_userid);
        lbl_userid.setBounds(20, 80, 130, 30);

        lbl_fname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_fname.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fname.setText("First Name           :");
        getContentPane().add(lbl_fname);
        lbl_fname.setBounds(20, 130, 130, 30);

        lbl_lname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_lname.setForeground(new java.awt.Color(255, 255, 255));
        lbl_lname.setText("Last Name           :");
        getContentPane().add(lbl_lname);
        lbl_lname.setBounds(20, 180, 130, 30);

        txt_fname.setEditable(false);
        getContentPane().add(txt_fname);
        txt_fname.setBounds(150, 130, 200, 30);

        btn_delete.setText("Delete");
        btn_delete.setToolTipText("click here to delete system user");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_delete);
        btn_delete.setBounds(40, 410, 120, 30);

        btn_clear.setText("Clear");
        btn_clear.setToolTipText("clear all fields");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        getContentPane().add(btn_clear);
        btn_clear.setBounds(240, 410, 120, 30);

        txt_lname.setEditable(false);
        getContentPane().add(txt_lname);
        txt_lname.setBounds(150, 180, 200, 30);

        lbl_nic.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_nic.setForeground(new java.awt.Color(255, 255, 255));
        lbl_nic.setText("NIC                      :");
        getContentPane().add(lbl_nic);
        lbl_nic.setBounds(20, 230, 130, 30);

        lbl_mobile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_mobile.setForeground(new java.awt.Color(255, 255, 255));
        lbl_mobile.setText("Mobile                 :");
        getContentPane().add(lbl_mobile);
        lbl_mobile.setBounds(20, 280, 130, 30);

        txt_nic.setEditable(false);
        getContentPane().add(txt_nic);
        txt_nic.setBounds(150, 230, 200, 30);

        txt_mobile.setEditable(false);
        getContentPane().add(txt_mobile);
        txt_mobile.setBounds(150, 280, 200, 30);

        jcb_userid.setModel(new javax.swing.DefaultComboBoxModel());
        jcb_userid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_useridItemStateChanged(evt);
            }
        });
        getContentPane().add(jcb_userid);
        jcb_userid.setBounds(150, 80, 200, 30);

        lbl_backgroundupdatemember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Ashen_Cafe/view/memberView/BackgroundGameZone.jpg"))); // NOI18N
        lbl_backgroundupdatemember.setText("Background");
        getContentPane().add(lbl_backgroundupdatemember);
        lbl_backgroundupdatemember.setBounds(0, 0, 410, 530);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        DataBaseSystemUsers dbsys=new DataBaseSystemUsers();
        
        Message msg=new Message();
        
        if(String.valueOf(jcb_userid.getSelectedItem()).equals("Select ID"))
            msg.warningMsg("User ID should be selected", this);
        
            int dialogResult = msg.confirmMsg("Do you want to delete this profile ", this);
            if( dialogResult ==  0 ){
              try{  
                
                  if(id==1){
                    msg.warningMsg("You can't Delete this record but you can update...", this);
                    clearAll();
                  }
                  else{
                dbsys.delete(id);
                
                clearAll();
                menu.setSystemUsersTable();
                msg.informMsg("Profile Successfully Deleted", this);
                this.dispose();
                  }
                }
            catch(Exception ex){
                msg.warningMsg(ex.toString(), this);
                }
            }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
            Message msg=new Message();
        
        int dialogResult = msg.confirmMsg("Do you want to clear all the fields? ", this);
				if(dialogResult ==  0){
					clearAll();
				}
    }//GEN-LAST:event_btn_clearActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
try{
   DataBaseConnection dbcon=new DataBaseConnection();
   
   con=dbcon.connection();
   Statement st=con.createStatement();
				
ResultSet rs = st.executeQuery("select id from systemusers");				
jcb_userid.addItem("Select ID");
while(rs.next()){											
jcb_userid.addItem(rs.getInt(1));			
}	
con.close();
}
catch(SQLException e){
		System.out.println("SQL Error in Update User Form"+"\n"+e.getMessage());
            }
    }//GEN-LAST:event_formWindowOpened

    private void jcb_useridItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_useridItemStateChanged
        DataBaseSystemUsers dbsys=new DataBaseSystemUsers();
        Systemusers sys=new Systemusers();
                
        if(String.valueOf(jcb_userid.getSelectedItem()).equals("Select ID")){
            System.out.println("******Select id to update User******");    
        }
        else{
            id=Integer.parseInt(String.valueOf(jcb_userid.getSelectedItem()));
            sys=dbsys.search(id);
            
        txt_fname.setText(sys.getFname());
        txt_lname.setText(sys.getLname());
        txt_nic.setText(sys.getNic());
        txt_mobile.setText(sys.getMobile());
       }
    }//GEN-LAST:event_jcb_useridItemStateChanged
    public void clearAll(){
        jcb_userid.setSelectedItem("Select ID");
        txt_fname.setText("");
        txt_lname.setText("");
        txt_nic.setText("");
        txt_mobile.setText("");

    }
    /**
     * @param args the command line arguments
     */
    private int id;
    private Connection con;
    private MainMenu menu;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JComboBox jcb_userid;
    private javax.swing.JLabel lbl_backgroundupdatemember;
    private javax.swing.JLabel lbl_fname;
    private javax.swing.JLabel lbl_heading;
    private javax.swing.JLabel lbl_lname;
    private javax.swing.JLabel lbl_mobile;
    private javax.swing.JLabel lbl_nic;
    private javax.swing.JLabel lbl_userid;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_mobile;
    private javax.swing.JTextField txt_nic;
    // End of variables declaration//GEN-END:variables
}
